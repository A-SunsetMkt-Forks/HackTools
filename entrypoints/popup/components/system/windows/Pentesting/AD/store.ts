import { create } from "zustand";
import { persist } from "zustand/middleware";
import { storage } from "@components/createPersistedState";

export interface Command {
    id: string;
    title: string;
    description: string;
    windows: string;
    windows_description: string;
    linux: string;
    linux_description: string;
}

export interface Task {
    id: number;
    topic: string;
    commands: Command[];
}

interface Store {
    operatingSystemMode: string;
    taskList: Task[];
    selectedTaskCommand: Command | null;
    setOperatingSystemMode: (mode: string) => void;
    setTaskList: (tasks: Task[]) => void;
    setSelectedTaskCommand: (command: Command) => void;
}

export const useStore = create<Store>(
    // @ts-ignore
    persist(
        (set, get) => ({
            operatingSystemMode: 'linux',
            taskList: [],
            selectedTaskCommand: null,
            setOperatingSystemMode: (mode) => set({ operatingSystemMode: mode }),
            setTaskList: (tasks) => set({ taskList: tasks }),
            setSelectedTaskCommand: (command) => set({ selectedTaskCommand: command }),
        }),
        {
            name: 'pentesting-ad-store',
            getStorage: () => storage,
        }
    )
);

export default useStore;